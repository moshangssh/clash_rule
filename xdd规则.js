function main(config) {
  config["proxy-groups"] = [
    {
      name: "PROXY",
      type: "select",
      proxies: ["AUTO", "HK AUTO", "SG AUTO", "JP AUTO", "US AUTO"],
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Static.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
    },
    {
      name: "AUTO",
      type: "url-test",
      interval: 300,
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
    },
    {
      name: "AIGC",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png",
      type: "select",
      proxies: ["SG AUTO", "JP AUTO", "US AUTO"],
    },
    {
      name: "Telegram",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png",
      type: "select",
      proxies: ["HK AUTO", "SG AUTO", "JP AUTO", "US AUTO"],
    },
    {
      name: "Google",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Google.png",
      type: "select",
      proxies: ["HK AUTO", "SG AUTO", "JP AUTO", "US AUTO"],
    },
    {
      name: "HK AUTO",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
      filter: "(?i)香港|Hong Kong|HK|🇭🇰",
      type: "url-test",
      interval: 300,
    },
    {
      name: "SG AUTO",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
      filter: "(?i)新加坡|Singapore|🇸🇬|狮城",
      type: "url-test",
      interval: 300,
    },
    {
      name: "JP AUTO",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
      filter: "(?i)日本|Japan|🇯🇵|东京|春奈",
      type: "url-test",
      interval: 300,
    },
    {
      name: "US AUTO",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
      filter: "(?i)美国|USA|🇺🇸|洛杉矶|凤凰城",
      type: "url-test",
      interval: 300,
    },
    {
      name: "GLOBAL",
      icon: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png",
      "include-all": true,
      "exclude-filter": "(?i)GB|Traffic|Expire|Premium|频道|订阅|ISP|流量|到期|重置",
      proxies: ["AUTO", "HK AUTO", "SG AUTO", "JP AUTO", "US AUTO"],
      type: "select",
    }
  ];
  if (!config['rule-providers']) {
    config['rule-providers'] = {};
  }
  config["rule-providers"] = Object.assign(config["rule-providers"], {
    ads: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    cn_domain: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cn.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    telegram_domain: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    google_domain: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    "geolocation-!cn": {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    private_domain: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/private.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },

    private_ip: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs",
      behavior: "ipcidr",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    cn_ip: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs",
      behavior: "ipcidr",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    telegram_ip: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs",
      behavior: "ipcidr",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    google_ip: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs",
      behavior: "ipcidr",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    bing: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bing.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    copilot: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Copilot/Copilot.yaml",
      behavior: "classical",
      interval: 86400,
      format: "yaml",
      type: "http",
    },
    claude: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/anthropic.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    openai: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openai.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
    ciciai: {
      url: "https://raw.githubusercontent.com/szkane/ClashRuleSet/main/Clash/Ruleset/CiciAi.list",
      behavior: "classical",
      interval: 86400,
      format: "text",
      type: "http",
    },
    github_domain: {
      url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/github.mrs",
      behavior: "domain",
      interval: 86400,
      format: "mrs",
      type: "http",
    },
  });

  config["rules"] = [
    "RULE-SET,ads,REJECT",
    "IP-CIDR,192.168.0.0/16,DIRECT,no-resolve",
    "DOMAIN-SUFFIX,oaifree.com,DIRECT",
    "RULE-SET,private_ip,DIRECT,no-resolve",
    "DOMAIN-SUFFIX,cursor.sh,AIGC",
    "RULE-SET,ciciai,AIGC",
    "RULE-SET,bing,AIGC",
    "RULE-SET,copilot,AIGC",
    "RULE-SET,openai,AIGC",
    "RULE-SET,claude,AIGC",
    "RULE-SET,github_domain,PROXY",
    "RULE-SET,telegram_domain,Telegram",
    "RULE-SET,telegram_ip,Telegram,no-resolve",
    "RULE-SET,google_domain,Google",
    "RULE-SET,google_ip,Google,no-resolve",
    "RULE-SET,geolocation-!cn,PROXY",
    "RULE-SET,cn_domain,DIRECT",
    "RULE-SET,cn_ip,DIRECT,no-resolve",
    "MATCH,PROXY",
  ];
  return config;
}
